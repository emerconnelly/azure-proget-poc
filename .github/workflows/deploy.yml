name: "Deploy"

on:
  push:
    branches:
    - main
    paths:
    - terraform/**
    - .github/workflows/**
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "emerconnelly"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "aks-proget-poc"
  CONFIG_DIRECTORY: "terraform/"

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      terraform-outputs: ${{ steps.workspace-output.outputs.outputs }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.0
      id: upload-configuration
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.CONFIG_DIRECTORY }}
    - name: Create Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
      id: create-run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.upload-configuration.outputs.configuration_version_id }}
    - name: Apply Run
      uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.0
      if: fromJSON(steps.create-run.outputs.payload).data.attributes.actions.IsConfirmable
      id: apply-run
      with:
        run: ${{ steps.create-run.outputs.run_id }}
        comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
    - name: Workspace Output
      uses: hashicorp/tfc-workflows-github/actions/workspace-output@v1.3.0
      id: workspace-output
      with:
        workspace: ${{ env.TF_WORKSPACE }}

  secrets-store-csi-driver:
    name: "SecretsProviderClass Manifest"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [terraform]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set Env Vars from Terraform Outputs
      run: |
        for element in $(echo '${{ needs.terraform.outputs.terraform-outputs }}' | jq -r '.[] | @base64'); do
          name=$(echo "$element" | base64 -d | jq -r '.name' | tr '[:lower:]' '[:upper:]')
          value=$(echo "$element" | base64 -d | jq -r '.value')
          echo "$name=$value" >> $GITHUB_ENV
        done
    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Download kubeconfig.yaml
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az keyvault secret download --vault-name $KEY_VAULT_NAME --name kubeconfig --file kubeconfig.yml
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest
    - name: Apply YAML Manifest
      run: |
        envsubst < k8s/secrets-store-csi-driver/proget-secret-provider-class.yml | kubectl apply -f -
      env:
        KUBECONFIG: kubeconfig.yml
